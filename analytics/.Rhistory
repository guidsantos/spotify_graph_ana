install.packages('igraph')
install.packages('dplyr')
install.packages('tkrplot')
install.packages('ggplot2')
install.packages('network')
install.packages('visNetwork')
install.packages('tidygraph')
library(igraph)
install.packages("dplyr")
library(dplyr)
library(tkrplot)
library(ggplot2)
library(visNetwork)
library(tidygraph)
tracks <- read.csv('./toptracks.csv')
artists <- read.csv('./toptracks_artists.csv') %>% filter(!is.na(artist.name))
genres <- read.csv('./toptracks_artists_genres.csv')
#Selecionando todos os dados de cada grupo
all_filter_tracks <- tracks %>% select(track.name, toplist.country, track.popularity)
all_filter_artists <- artists %>% select(artist.name, track.name, track.popularity)
all_filter_genres <- genres %>% select(artist.genres, artist.name, artist.popularity)
#Pegandos os valores unicos
uniq_tracks <- unique(all_filter_tracks %>% select(track.name))
uniq_countries <- unique(all_filter_tracks %>% select(toplist.country))
uniq_artists <- unique(all_filter_artists %>% select(artist.name))
uniq_genres <- unique(all_filter_genres %>% select(artist.genres))
#Sanitizando nome da coluna label
colnames(uniq_tracks) <- c('label')
colnames(uniq_countries) <- c('label')
colnames(uniq_artists) <- c('label')
colnames(uniq_genres) <- c('label')
#grupo do vertice
uniq_tracks$group <- 'tracks'
uniq_countries$group <- 'country'
uniq_artists$group <- 'artists'
uniq_genres$group <- 'genres'
#Cor do vertice
uniq_tracks$color <- '#4b917d'
uniq_countries$color <- '#cdf564'
uniq_artists$color <- '#0000ff'
uniq_genres$color <- '#f037a5'
#Tamanho do vertice
uniq_tracks$size <- 15
uniq_countries$size <- 40
uniq_artists$size <- 25
uniq_genres$size <- 15
#Juntando todos os dados
plot_data <- dplyr::union(dplyr::union(uniq_countries, uniq_artists), dplyr::union(uniq_genres,uniq_tracks))
plot_data$id <- 1:nrow(plot_data)
#Sanitizando o nome das colunas para juntar
colnames(all_filter_tracks) <- c('from','to', 'weight')
colnames(all_filter_artists) <- c('from','to', 'weight')
colnames(all_filter_genres) <- c('from','to', 'weight')
#Juntandos os dados e criandos a lista de arestas
union_graphs  <-  dplyr::union(dplyr::union(all_filter_tracks,all_filter_artists),all_filter_genres)
join_from_edges_id <- left_join(union_graphs, plot_data, by= c('from' = 'label')) %>%
select('id','from','to','weight')
colnames(join_from_edges_id) <- c('from','from_label','to', 'weight')
join_to_edges_id <- left_join(join_from_edges_id, plot_data, by= c('to' = 'label')) %>%
select('from','from_label','id','to', 'weight')
colnames(join_to_edges_id) <- c('from','from_label','to','to_label', 'weight')
#Definindo o tamanho da aresta
edges <- mutate(join_to_edges_id, width = 1)
visGraph <- visNetwork(plot_data,
edges,
directed_graph=FALSE,
width='100%') %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled=TRUE, degree=2),
nodesIdSelection = TRUE,
selectedBy = "group",
autoResize = TRUE, ) %>%
visInteraction(navigationButtons = TRUE) %>%
visLayout(improvedLayout = TRUE)
visGraph
graph <- graph_from_data_frame(edges %>% select('from_label','to_label','weight'), directed = FALSE)
gsize(graph)
gorder(graph)
graph_degree <- as.data.frame(sort(degree(graph), decreasing = TRUE))
colnames(graph_degree) <- c('degree')
graph_degree <- cbind(node = rownames(graph_degree), graph_degree)
rownames(graph_degree) <- 1:nrow(graph_degree)
graph_degree
graph_centrality <- as.data.frame(sort(eigen_centrality(graph)$vector, decreasing = TRUE))
colnames(graph_centrality) <- c('centrality')
graph_centrality <- cbind(tracks = rownames(graph_centrality), graph_centrality)
rownames(graph_centrality) <- 1:nrow(graph_centrality)
graph_centrality
graph_betweenness <- as.data.frame(sort(betweenness(graph), decreasing = TRUE))
colnames(graph_betweenness) <- c('(betweenness')
graph_betweenness <- cbind(tracks = rownames(graph_betweenness), graph_betweenness)
rownames(graph_betweenness) <- 1:nrow(graph_betweenness)
graph_betweenness
track_edges <- edges %>% filter(from_label %in% uniq_tracks$label)
track_graph <- graph_from_data_frame(track_edges %>% select('from_label','to_label','weight') ,
directed = FALSE)
tracks_degree <- as.data.frame(sort(degree(track_graph), decreasing = TRUE))
colnames(tracks_degree) <- c('degree')
tracks_degree <- cbind(node = rownames(tracks_degree), tracks_degree)
rownames(tracks_degree) <- 1:nrow(tracks_degree)
tracks_degree <- tracks_degree %>% filter(node %in% uniq_tracks$label)
tracks_degree
track_centrality <- as.data.frame(sort(eigen_centrality(track_graph)$vector, decreasing = TRUE))
colnames(track_centrality) <- c('centrality')
track_centrality <- cbind(nodes = rownames(track_centrality), track_centrality)
rownames(track_centrality) <- 1:nrow(track_centrality)
track_centrality <- track_centrality %>% filter(nodes %in% uniq_tracks$label)
track_centrality
track_betweenness <- as.data.frame(sort(betweenness(track_graph), decreasing = TRUE))
colnames(track_betweenness) <- c('betweenness')
track_betweenness <- cbind(nodes = rownames(track_betweenness), track_betweenness)
rownames(track_betweenness) <- 1:nrow(track_betweenness)
track_betweenness <- track_betweenness %>% filter(nodes %in% uniq_tracks$label)
track_betweenness
track_closeness <- as.data.frame(sort(closeness(track_graph), decreasing = TRUE))
colnames(track_closeness) <- c('closeness')
track_closeness <- cbind(nodes = rownames(track_closeness), track_closeness)
rownames(track_closeness) <- 1:nrow(track_closeness)
track_closeness <- track_closeness %>% filter(nodes %in% uniq_tracks$label)
track_closeness <- mutate(track_closeness, close= 1/closeness)
track_closeness
artists_degree <- graph_degree %>% filter(node %in% uniq_artists$label)
colnames(artists_degree) <- c('degree')
artists_degree
artists_edges <- edges %>% filter(from_label %in% uniq_artists$label |
from_label %in% uniq_tracks$label)
artists_graph <- graph_from_data_frame(artists_edges %>% select('from_label','to_label','weight') ,
directed = FALSE)
artists_track_degree <- as.data.frame(sort(degree(artists_graph), decreasing = TRUE))
colnames(artists_track_degree) <- c('degree')
artists_track_degree <- cbind(node = rownames(artists_track_degree), artists_track_degree)
rownames(artists_track_degree) <- 1:nrow(artists_track_degree)
artists_track_degree <- artists_track_degree %>% filter(node %in% uniq_artists$label)
artists_track_degree
nodes_artist_track <- plot_data %>% filter(!label %in% uniq_genres$label)
comm_vis_graph_track_country <- visNetwork(nodes_artist_track,
artists_edges,
directed_graph=FALSE,
width='100%') %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled=TRUE, degree=2),
nodesIdSelection = TRUE,
selectedBy = "group",
autoResize = TRUE) %>%
visInteraction(navigationButtons = TRUE) %>%
visLayout(improvedLayout = TRUE)
comm_vis_graph_track_country
select_track_edges <- artists_edges %>% filter(from_label %in% artists_track_degree$node[1:10])
nodes_top_degree_artist_track <- nodes_artist_track %>% filter(label %in% artists_track_degree$node[1:10] |
group == 'country' |
label %in% select_track_edges$to_label)
top_degree_artists_edges <- artists_edges %>% filter(from_label %in% select_track_edges$to_label |
from_label %in% artists_track_degree$node[1:10])
comm_vis_graph_track_country <- visNetwork(nodes_top_degree_artist_track,
top_degree_artists_edges,
directed_graph=FALSE,
width='100%') %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled=TRUE, degree=2),
nodesIdSelection = TRUE,
selectedBy = "group",
autoResize = TRUE) %>%
visInteraction(navigationButtons = TRUE) %>%
visLayout(improvedLayout = TRUE)
comm_vis_graph_track_country
genres_degree <- graph_degree %>% filter(node %in% uniq_genres$label)
colnames(genres_degree) <- c('degree')
genres_degree
community_graph <- cluster_fast_greedy(graph)
modularity(community_graph)
community_graph_members <- membership(community_graph)
community_graph_members_df <- as.data.frame(community_graph_members[!is.na(community_graph_members)])
colnames(community_graph_members_df) <- c('community')
community_graph_members_df <- cbind(members = rownames(community_graph_members_df), community_graph_members_df)
rownames(community_graph_members_df) <- 1:nrow(community_graph_members_df)
nodes_comm <- left_join(plot_data, community_graph_members_df, by=c('label' = 'members'))
nodes_comm <- nodes_comm %>% select('id','label','community','size')
colnames(nodes_comm) <- c('id','label','group','size')
comm_vis_graph <- visNetwork(nodes_comm,
edges,
directed_graph=FALSE,
width='100%') %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled=TRUE, degree=1),
nodesIdSelection = TRUE,
selectedBy = "group",
autoResize = TRUE) %>%
visInteraction(navigationButtons = TRUE) %>%
visLayout(improvedLayout = TRUE)
comm_vis_graph
track_country_graph <- graph_from_data_frame(edges %>%
select('from_label','to_label','weight') %>%
filter(from_label %in% uniq_tracks$label),
directed = FALSE)
community_track_country <- cluster_fast_greedy(track_country_graph)
modularity(community_track_country)
community_track_country_members <- membership(community_track_country)
community_track_country_members_df <- as.data.frame(community_track_country_members[!is.na(community_track_country_members)])
colnames(community_track_country_members_df) <- c('community')
community_track_country_members_df <- cbind(members = rownames(community_track_country_members_df),
community_track_country_members_df)
rownames(community_track_country_members_df) <- 1:nrow(community_track_country_members_df)
nodes_comm_track_country <- left_join(plot_data,
community_track_country_members_df,
by=c('label' = 'members'))
nodes_comm_track_country <- nodes_comm_track_country %>% select('id','label','community','size')
colnames(nodes_comm_track_country) <- c('id','label','group','size')
edges_track_country <- edges %>% filter(from_label %in% uniq_tracks$label)
comm_vis_graph_track_country <- visNetwork(nodes_comm_track_country,
edges_track_country,
directed_graph=FALSE,
width='100%') %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled=TRUE, degree=1),
nodesIdSelection = TRUE,
selectedBy = "group",
autoResize = TRUE) %>%
visInteraction(navigationButtons = TRUE) %>%
visLayout(improvedLayout = TRUE)
comm_vis_graph_track_country
artist_genre_graph <- graph_from_data_frame(edges %>%
select('from_label','to_label','weight') %>%
filter(from_label %in% uniq_genres$label),
directed = FALSE)
community_artist_genre_graph <- cluster_fast_greedy(artist_genre_graph)
modularity(community_artist_genre_graph)
community_artist_genre_graph_members <- membership(community_artist_genre_graph)
community_artist_genre_graph_members_df <- as.data.frame(community_artist_genre_graph_members[!is.na(community_artist_genre_graph_members)])
colnames(community_artist_genre_graph_members_df) <- c('community')
community_artist_genre_graph_members_df <- cbind(members = rownames(community_artist_genre_graph_members_df),
community_artist_genre_graph_members_df)
rownames(community_artist_genre_graph_members_df) <- 1:nrow(community_artist_genre_graph_members_df)
nodes_comm_artist_genre <- left_join(plot_data,
community_artist_genre_graph_members_df,
by=c('label' = 'members'))
nodes_comm_artist_genre <- nodes_comm_artist_genre %>% select('id','label','community','size')
colnames(nodes_comm_artist_genre) <- c('id','label','group','size')
nodes_comm_artist_genre <- nodes_comm_artist_genre %>% filter(label %in% uniq_genres$label |
label %in% uniq_artists$label)
edges_artist_genre <- edges %>% filter(from_label %in% uniq_genres$label)
comm_vis_graph_artist_genre<- visNetwork(nodes_comm_artist_genre,
edges_artist_genre,
directed_graph=FALSE,
width='100%') %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visOptions(highlightNearest = list(enabled=TRUE, degree=1),
nodesIdSelection = TRUE,
selectedBy = "group",
autoResize = TRUE) %>%
visInteraction(navigationButtons = TRUE) %>%
visLayout(improvedLayout = TRUE)
comm_vis_graph_artist_genre
